@page "/languageselector"
@using ZiraatBankUzPortal.Shared.Constants
@inject Microsoft.Extensions.Localization.IStringLocalizer<LanguageSelector> _localizer

<MudMenu Class="pa-2">
    <ActivatorContent>
        <MudChip Style="@($"background:{Colors.Shades.White};")">@currentLanguage</MudChip>
    </ActivatorContent>
    <ChildContent>
        @foreach (var language in LocalizationConstants.SupportedLanguages)
        {
            <MudMenuItem OnClick="(()=> ChangeLanguageAsync(language.Code,language.DisplayName))">@_localizer[language.DisplayName]</MudMenuItem>
        }
    </ChildContent>
</MudMenu>

@code
{
    public string currentLanguage;

    protected override async Task OnInitializedAsync()
    {
        string currentLanguageCode = await _localStorage.GetItemAsStringAsync("culture");
        if (currentLanguageCode != null)
        {
            await GetCurrentLanguageDisplay(currentLanguageCode);
        }
        else
        {
            await _localStorage.SetItemAsync<string>("culture", "en-US");
            await GetCurrentLanguageDisplay("'en-US'");
        }
    }
    private async Task ChangeLanguageAsync(string languageCode, string displayName)
    {
        await _localStorage.SetItemAsync<string>("culture", languageCode);
        _navigationManager.NavigateTo(_navigationManager.Uri, forceLoad: true);
    }
    private async Task GetCurrentLanguageDisplay(string languageCode)
    {

        foreach (var language in LocalizationConstants.SupportedLanguages)
        {
            if (language.Code == languageCode.Substring(1, languageCode.Length - 1).Substring(0, languageCode.Length - 2))
            {
                currentLanguage = language.DisplayName;
            }
        }
    }
}